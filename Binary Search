 class BinarySearch
    {
      static  int[] arr = new int[] { 4, 8, 10, 15, 18, 21, 24, 27, 29, 33, 34, 37, 39, 41, 43 };
        static void Main(string[] args)
        {
           
            int key = 18;

            BinarySearch obj = new BinarySearch();
            bool found = obj.binarySearch(arr, key);

            bool found2= obj.binarySearchWithRecursion(0, arr.Length-1, key);
            Console.WriteLine("Hello World!");


            int i = 0;
            int j = arr.Length - 1;

            while (i < j)
            {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                i++;
                j--;
            }
        }


        public bool binarySearch(int[] arr, int key)
        {
            int len = arr.Length;
            int low = 0;
            int high = len - 1;
            int mid = 0;
            while (low <= high)
            {
                mid = (low + high) / 2;
                if (key == arr[mid]) return true;
                if (key < arr[mid])
                {
                    high = mid - 1;
                }
                else
                {
                    low = mid + 1;
                }
            }

            return false;
            
        }

        public bool binarySearchWithRecursion(int low, int high, int key)
        {
            if (low <= high)
            {
                int mid = (low + high) / 2;

                if (key == arr[mid])
                {
                    return true;
                }
                if (key < arr[mid])
                {
                    high = mid - 1;
                }
                else
                {
                    low = mid + 1;
                }

                return binarySearchWithRecursion(low, high, key);


            }
            return false;

        }
    }
